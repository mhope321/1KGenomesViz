result = append(result,json)
} else {
text = str_sub(x,(coords[i]-2),(coords[i+1]-3))
json = fromJSON(text,flatten=TRUE)
result = append(result,json)
}
}
return(result)
}
nchar(fromdbsnp_text)
snps_json = parse_json(fromdbsnp_text)
snps_json
View(fromdbsnp)
View(snps_json)
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
View(snps_json)
result = vector(mode="list",length=n_records)
prefix_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id="
snps = "200676709,200505207,140739101"
#snps = "200676709"
suffix_url = "&rettype=json&retmode=text"
query = paste0(prefix_url,snps,suffix_url)
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
x=fromdbsnp_text
#result = list()
coords = str_locate_all(x,"refsnp_id")[[1]][,1]
n_records = length(coords)
result = vector(mode="list",length=n_records)
length(result)
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
View(snps_json)
snps_json[1]
snps_json[[1]]
parse_json = function(x)
{
result = list()
coords = str_locate_all(x,"refsnp_id")[[1]][,1]
n_records = length(coords)
#result = vector(mode="list",length=n_records)
for (i in 1:n_records)
{
if (i==n_records)
{
text = str_sub(x,(coords[i]-2),(nchar(x)))
json = fromJSON(text,flatten=TRUE)
result = list(result,i=json)
} else {
text = str_sub(x,(coords[i]-2),(coords[i+1]-3))
json = fromJSON(text,flatten=TRUE)
result = list(result,i=json)
}
}
return(result)
}
snps_json = parse_json(fromdbsnp_text)
View(snps_json)
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
snps_json
View(snps_json)
snps_json[1]
snps_json[2]
snps_json[3]
snps_json[10]
snps_json[11]
snps_json[9]$allele_annotations$clinical
snps_json[9]$allele_annotations
snps_json[9][2]
snps_json[9]
snps_json$primary_snapshot_data
snps_json$primary_snapshot_data$allele_annotations$clinical
x
nchar(x)
result = list()
coords = str_locate_all(x,"refsnp_id")[[1]][,1]
n_records = length(coords)
text = str_sub(x,(coords[i]-2),(coords[i+1]-3))
json = fromJSON(text,flatten=TRUE)
text = str_sub(x,(coords[1]-2),(coords[1+1]-3))
json = fromJSON(text,flatten=TRUE)
typeof(json)
result = list()
length(result)
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
View(snps_json)
length(snps_json)
snps_json[[1]]$primary_snapshot_data$allele_annotations$clinical
View(snps_json)
clinical_info = function(x){
result = list()
for (i in 1:length(x))
{
snp_info = x[[i]]$refsnp_id
clinical_info = x[[i]]$primary_snapshot_data$allele_annotations$clinical
result = append(result,snp_info,clinical_info)
}
return(result)
}
snps_clin = clincical_info(snps_json)
clinical_info = function(x){
result = list()
for (i in 1:length(x))
{
snp_info = x[[i]]$refsnp_id
clinical_info = x[[i]]$primary_snapshot_data$allele_annotations$clinical
result = append(result,snp_info,clinical_info)
}
return(result)
}
snps_clin = clinical_info(snps_json)
x=snps_json
result = list()
i=1
snp_info = x[[i]]$refsnp_id
clinical_info = x[[i]]$primary_snapshot_data$allele_annotations$clinical
result = append(result,snp_info,clinical_info)
clinical_info = function(x){
result = list()
for (i in 1:length(x))
{
snp_info = x[[i]]$refsnp_id
clinical_info = x[[i]]$primary_snapshot_data$allele_annotations$clinical
result = append(result,snp_info)
result = append(result,clinical_info)
}
return(result)
}
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
prefix_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id="
#snps = "200676709,200505207,140739101"
#snps = "200676709"
snps= "268,328"
suffix_url = "&rettype=json&retmode=text"
query = paste0(prefix_url,snps,suffix_url)
quert
query
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
fromdbsnp_text
x=fromdbsnp_text
result = list()
coords = str_locate_all(x,"refsnp_id")[[1]][,1]
n_records = length(coords)
n_records
coords
str_locate_all(x,"refsnp_id")
str_locate_all(x,"}{")
str_locate_all(x,"\\}\\{")
prefix_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id="
#snps = "200676709,200505207,140739101"
snps = "200676709"
#snps= "268,328"
suffix_url = "&rettype=json&retmode=text"
query = paste0(prefix_url,snps,suffix_url)
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
x=fromdbsnp_text
result = list()
coords = str_locate_all(x,"\\}\\{")[[1]][,1]
coords
n_records = length(coords)+1
n_records
coords = str_locate_all(x,"\\}\\{")[[1]][,1]
coords = str_locate_all(x,"\\}\\{")[[1]]
coords
snps = "200676709,200505207,140739101"
query = paste0(prefix_url,snps,suffix_url)
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
x=fromdbsnp_text
result = list()
coords = str_locate_all(x,"\\}\\{")[[1]]
coords
typeof(coords)
unlist(coords)
flatten(coords)
flatten(as.date.frame(coords))
flatten(as.dateframe(coords))
flatten(as.data.frame(coords))
flatten(as.dataframe(coords))
test = c(1,coords[1,],coords[2,],nchar(x))
test
names(test)
names(test) =NULL
test
x
hits = str_locate_all(x,"\\}\\{")[[1]]
hits
n_records = length(hits)+1
tmp = c(1)
for (i in 1:n_records){
tmp = c(tmp,hits[i,])
}
tmp
tmp = c(tmp,nchar(x))
tmp
coords =  matrix(tmp,nrow=n_records,ncol=2,byrow=T)
n_records
hits = str_locate_all(x,"\\}\\{")[[1]]
hits
length(hits)
n_records = nrow(hits)+1
n_records
tmp = c(1)
for (i in 1:n_records){
tmp = c(tmp,hits[i,])
}
tmp
tmp = c(tmp,nchar(x))
coords =  matrix(tmp,nrow=n_records,ncol=2,byrow=T)
colnames(coords) = c("start","end")
coords
hits
#Get breaks in JSON that match "}{"
hits = str_locate_all(x,"\\}\\{")[[1]]
#Number of records is number of breaks plus one, no breaks is one record
n_records = nrow(hits)+1
#The starts and ends of hits gives the index of where to break, but we need to add the start
#and stop index of x and shift things accordingly. It's as if we want to add 1 in position [1,1]
#of hits, and then have everything shift down one position row-wise in the hits matrix. Then, the
#last position of hits is filled with the length of x, and we have an object coords with all
#our breaks.
tmp = c(1)
if(n_records!=1)
{
for (i in 1:nrow(hits)){
tmp = c(tmp,hits[i,])
}
}
tmp = c(tmp,nchar(x))
coords =  matrix(tmp,nrow=n_records,ncol=2,byrow=T)
colnames(coords) = c("start","end")
coords
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
snps_clin
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
snps_clin
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
snps_clin
View(snps_clin)
View(snps_clin)
View(snps_json)
View(snps_clin)
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
View(snps_clin)
length(snps_json)
snp_info = snps_json[[1]]$refsnp_id
snp_info
clinical_info = snps_json[[1]]$primary_snapshot_data$allele_annotations$clinical
length(clinical_info)
clinical_info[[1]]
x = snps_json
i = 1
j =1
result = list()
snp_info = x[[i]]$refsnp_id
clinical_frame = x[[i]]$primary_snapshot_data$allele_annotations$clinical
clinical_info = list()
clinical_info = append(clinical_info,clinical_frame[[j]]$allele_id)
clinical_info = append(clinical_info,clinical_frame[[j]]$disease_names)
clinical_info = append(clinical_info,clinical_frame[[j]]$clinical_significance)
clinical_info
clinical_frame[[j]]$allele_id
j=2
clinical_info = append(clinical_info,clinical_frame[[j]]$allele_id)
clinical_info = append(clinical_info,clinical_frame[[j]]$disease_names)
clinical_info = append(clinical_info,clinical_frame[[j]]$clinical_significance)
clinical_info
clinical_info = function(x){
result = list()
for (i in 1:length(x))
{
snp_info = x[[i]]$refsnp_id
clinical_frame = x[[i]]$primary_snapshot_data$allele_annotations$clinical
clinical_info = data.frame()
for (j in 1:length(clinical_frame))
{
clinical_info_tmp = data.frame(allele_id=clinical_frame[[j]]$allele_id,disease_names=clinical_frame[[j]]$disease_names,clinical_significance=clinical_frame[[j]]$clinical_significance)
clinical_info = rbind(clinical_info,clinical_info_tmp)
}
full_list = append(snp_info,clinical_info)
result[[length(result)+1]] = full_list
}
return(result)
}
snps_json = parse_json(fromdbsnp_text)
snps_clin = clinical_info(snps_json)
x
i
result = list()
snp_info = x[[i]]$refsnp_id
clinical_frame = x[[i]]$primary_snapshot_data$allele_annotations$clinical
clinical_info = data.frame()
j=1
clinical_info_tmp = data.frame(allele_id=clinical_frame[[j]]$allele_id,disease_names=clinical_frame[[j]]$disease_names,clinical_significance=clinical_frame[[j]]$clinical_significance)
clinical_info_tmp
clinical_frame[[j]]
dim(clinical_frame[[j]])
dim(clinical_frame[[2]])
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
x=snps_json
i=1
j=1
result = list()
snp_info = x[[i]]$refsnp_id
clinical_frame = x[[i]]$primary_snapshot_data$allele_annotations$clinical
clinical_info = data.frame()
clinical_frame[[j]])[1]==0
dim(clinical_frame[[j]])[1]==0
j=2
length(clinical_frame)
dim(clinical_frame[[j]])[1]==0
clinical_info_tmp = data.frame(allele_id=clinical_frame[[j]]$allele_id,disease_names=clinical_frame[[j]]$disease_names,clinical_significance=clinical_frame[[j]]$clinical_significance)
clinical_info_tmp
View(clinical_info_tmp)
clinical_frame[[j]]$allele_id
clinical_frame[[j]]
clinical_info_tmp = data.frame("allele_id"=clinical_frame[[j]]$allele_id,"disease_names"=clinical_frame[[j]]$disease_names,"clinical_significance"=clinical_frame[[j]]$clinical_significance)
View(clinical_info_tmp)
clinical_frame[[j]]$disease_names
clinical_frame[[j]]$clinical_significance
clinical_frame[[j]]$allele_id
unlist(clinical_frame[[j]]$disease_names)
clinical_info_tmp = data.frame("allele_id"=clinical_frame[[j]]$allele_id,"disease_names"=unlist(clinical_frame[[j]]$disease_names),"clinical_significance"=unlist(clinical_frame[[j]]$clinical_significance))
View(clinical_info_tmp)
clinical_info = rbind(clinical_info,clinical_info_tmp)
View(clinical_info)
full_list = append(snp_info,clinical_info)
View(full_list)
View(full_list)
clinical_info = function(x){
result = list()
for (i in 1:length(x))
{
snp_info = x[[i]]$refsnp_id
clinical_frame = x[[i]]$primary_snapshot_data$allele_annotations$clinical
clinical_info = data.frame()
for (j in 1:length(clinical_frame))
{
if(dim(clinical_frame[[j]])[1]==0)
next
clinical_info_tmp = data.frame("allele_id"=clinical_frame[[j]]$allele_id,"disease_names"=unlist(clinical_frame[[j]]$disease_names),"clinical_significance"=unlist(clinical_frame[[j]]$clinical_significance))
clinical_info = rbind(clinical_info,clinical_info_tmp)
}
full_list = append(snp_info,clinical_info)
result[[length(result)+1]] = full_list
}
return(result)
}
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
View(snps_clin)
source('~/Desktop/NYCDSA/10KGen/dbSNP-query.R')
View(snps_clin)
source('~/Desktop/NYCDSA/10KGen/Granges-Preproc.R')
var_final %>% filter(names=="NOTCH1")
notch_vars = var_final %>% filter(names=="NOTCH1")
notch_vars = var_final %>% filter(names=="NOTCH1") %>% arrange(desc(V7))
notch_vars
View(notch_vars)
notch_vars = var_final %>% filter(names=="NOTCH1"$V7>=0.001) %>% arrange(desc(V7))
notch_vars = var_final %>% filter(names=="NOTCH1"&V7>=0.001) %>% arrange(desc(V7))
View(notch_vars)
notch_vars=notch_vars[2:nrow(notch_vars),]
notch_vars_refs = notch_vars[,"V3"]
head(notch_vars_refs)
nchar(notch_vars_refs)
str_c(notch_vars,refs,sep=",",collapse="")
str_c(notch_vars_refs,sep=",",collapse="")
str_c(notch_vars_refs,collapse="")
str_c(notch_vars_refs,collapse=",")
str_replace(notch_vars_refs,"rs","")
notch_vars_refs = str_replace(notch_vars_refs,"rs","")
notch_vars_refs = str_c(notch_vars_refs,collapse=",")
snps = notch_vars_refs
snps
prefix_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=snp&id="
#snps = "200676709,200505207,140739101"
#snps = "200676709"
#snps= "268,328"
suffix_url = "&rettype=json&retmode=text"
query = paste0(prefix_url,snps,suffix_url)
query
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
snps_json = parse_json(fromdbsnp_text)
View(snps_json)
fromdbsnp_text
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
fromdbsnp_text
query
snps
snps2 = "2519143,2797830,6479643,141116007,2873804,2519151,1611122,11283016,2073837,3025383"
query = paste0(prefix_url,snps2,suffix_url)
fromdbsnp = GET(url=query)
fromdbsnp_text = content(fromdbsnp, as="text", encoding="UTF-8")
fromdbsnp_text
snps_json = parse_json(fromdbsnp_text)
View(snps_json)
snps_clin = clinical_info(snps_json)
View(snps_json)
notch = var_final %>% filter(names="NOTCH1")
notch = var_final %>% filter(names=="NOTCH1")
View(notch)
notch = notch %>% arrange(V3)
test_url = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=snp&term=%28FLT3%5BGene%20Name%5D%29%20AND%20%22pathogenic%22%5BClinical%20Significance%5D%20"
test_db = GET(url=test_url)
View(test_db)
test_text = content(test_db, as="text", encoding="UTF-8")
test_text
View(notch)
var_final %>% filter(names=="NOTCH1") %>% arrange(desc(V7))
shiny::runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
runApp('10KGen')
setwd("~/Desktop/NYCDSA/10KGen/10KGen")
runApp()
runApp()
runApp()
runApp()
vars = fread(file="./data/Exon-Variants.csv",header=F)
setwd("~/Desktop/NYCDSA/10KGen/10KGen")
vars = fread(file="./data/Exon-Variants.csv",header=F)
vars = fread(file="./data/ExonVariants.csv",header=F)
runApp()
runApp()
head(vars)
setwd("~/Desktop/NYCDSA/10KGen/10KGen")
vars = fread(file="./data/ExonVariants.csv",header=F)
head(vars)
vars[1,1]
typeof(vars[1,1])
as.character(vars[1,1])
runApp()
runApp('~/Downloads/flights')
View(vars)
vars %>% select(V3=chr)
vars %>% select(chr=V3)
vars %>% select(chr=V3,pos=V1,id=V4,name=V2,ref=V5,allele=V6,type=V7,AF=V8,AF_AFR=V9,AF_AMR=V10,AF_EAS=V11,AF_EUR=V12,AF_SAS=V13)
source('~/Desktop/NYCDSA/10KGen/Granges-Preproc.R')
head(var_final)
head(vars)
var_final = var_final %>% select(chr=V1,pos=begin,id=V3,name=names,ref=V4,
allele=V5,type=V6,AF=V7,AF_AFR=V8,
AF_AMR=V9,AF_EAS=V10,AF_EUR=V11,AF_SAS=V12)
head(var_final)
fwrite(var_final,file="ExonVariants.csv",sep=",")
source('~/Desktop/NYCDSA/10KGen/10KGen/global.R')
head(vars)
source('~/Desktop/NYCDSA/10KGen/10KGen/global.R')
head(vvars
)
head(vars)
runApp()
runApp()
runApp()
head(vars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
vars = fread(file="./data/ExonVariants.csv",header=T)
vars %>% filter(name="ETS1")
vars %>% filter(name=="ETS1")
MAF = 1
vars %>% filter(name=="ETS1") %>%
filter(case_when(MAF==1 ~ AF>=.1,MAF==2 ~ AF>=.01,
MAF==3 ~ AF>=.001,MAF ~ AF>=.0001,))
vars %>% filter(name=="ETS1") %>%
filter(case_when(MAF==1 ~ AF>=.1,MAF==2 ~ AF>=.01,
MAF==3 ~ AF>=.001,MAF==4 ~ AF>=.0001,))
vars %>% filter(name=="ETS1") %>%
filter(case_when(MAF==1 ~ AF>=.1,MAF==2 ~ AF>=.01,
MAF==3 ~ AF>=.001,MAF==4 ~ AF>=.0001,)) %>% arrange(desc(AF))
MAF=2
vars %>% filter(name=="ETS1") %>%
filter(case_when(MAF==1 ~ AF>=.1,MAF==2 ~ AF>=.01,
MAF==3 ~ AF>=.001,MAF==4 ~ AF>=.0001,)) %>% arrange(desc(AF))
vars[vars$name=="ETS1","id"]
runApp()
runApp()
vars = fread(file="./data/ExonVariants.csv",header=T)
runApp()
runApp()
runApp()
runApp()
runApp()
vars %>% filter(name="ETS1")
vars %>% filter(name=="ETS1")
vars %>% filter(name=="ETS1") %>% arrange(desc(AF))
list(">10%" = 1, ">1%" = 2, ">0.1%" = 3, ">0.01%" = 4)
runApp()
runApp()
runApp()
runApp()
vars %>% filter(name=="ETS1")
vars %>% filter(name=="ETS1") %>% filter()
vars %>% filter(name=="ETS1") %>% filter() %>% filter()
vars %>% filter(name=="ETS1") %>% filter() %>% filter("")
vars %>% filter(name=="ETS1") %>% filter() %>% filter(TRUE)
runApp()
